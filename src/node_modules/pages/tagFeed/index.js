import React, { Fragment, useEffect } from 'react'
import {stringify} from 'query-string'

import useFetch from 'hooks/useFetch'
import Feed from 'components/feed'
import Pagination from 'components/pagination'
import {getPaginator, limit} from 'utils'
import PopularTags from 'components/popularTags'
import Loading from 'components/loading'
import ErrorMessage from 'components/errorMessage'
import FeedToggler from 'components/feedToggler'

const TagFeed = (props) => {
    const tagName = props.match.params.slug
    const {offset, currentPage} = getPaginator(props.location.search)
    const strigifiedParams = stringify({
        limit,
        offset,
        tag: tagName
    })
    const apiUrl = `articles?${strigifiedParams}`
    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)

    useEffect(() => {
        doFetch()
    }, [doFetch, currentPage, tagName])

    return (
        <div className='home-page'>
            <div className='banner'>
                <div className='container'>
                    <h1>Medium</h1>
                    <p>A place to share knowlege</p>
                </div>
            </div>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-9'>
                        <FeedToggler tagName={tagName}/>
                        {isLoading && <Loading />}
                        {error && <ErrorMessage /> }
                        {!isLoading && response && (
                            <Fragment>
                                <Feed articles={response.articles}/>
                                <Pagination total={response.articlesCount} limit={limit} url={props.match.url} currentPage={currentPage}/>
                            </Fragment>
                        )}
                    </div>
                    <div className='col-md-3'>
                        <PopularTags />
                    </div>
                </div>
            </div>
        </div>
    )
}

export default TagFeed